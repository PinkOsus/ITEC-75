
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.Image;
import javax.swing.*;
import java.util.Arrays;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import static javax.swing.JOptionPane.showMessageDialog;
/**
 *
 * @author tryth
 */
public class Books extends javax.swing.JFrame {

    /**
     * Creates new form Books
     */
    public Books() {
        initComponents();
        refreshTable();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        String genres[] = {"Fiction","Non-Fiction","Comedy", "Romance", "History", "Horror", "Drama", "Action"};
                
        for(String genre: genres){
            genreCbox.addItem(genre);
        }
        
        resizeIcon(addBtn, "/image/job-application.png", 20, 20);
        resizeIcon(upBtn, "/image/update.png", 20, 20);
        resizeIcon(delBtn, "/image/recycle-bin.png", 20, 20);
        resizeIcon(clearBtn, "/image/broom.png", 20, 20);
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                // Reopen MainFrame
                Frame main = new Frame();
                main.setVisible(true);
                dispose(); // close this EditBooksFrame
            }
        });
    }
    
    public void refreshTable(){
        DefaultTableModel model = new DefaultTableModel();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://Localhost:3306/books_db";
            String user = "root";
            String pass = "";
            ResultSet rs = null;
            
            Connection conn = DriverManager.getConnection(url, user, pass);
            Statement stmt = conn.createStatement();
            
            String query = "SELECT * FROM books_tbl";
            rs = stmt.executeQuery(query);
            
            ResultSetMetaData metadata = rs.getMetaData();
            int columnCount = metadata.getColumnCount();
            
            String headers[] = {"ISBN", "Book Name", "Author", "Genre", "Published Date"};
            for(String header: headers){
                model.addColumn(header);
            }
            
            while(rs.next()){
                Object[] row = new Object[columnCount];
                for(int i = 1; i<=columnCount; i++){
                    row[i-1] = rs.getObject(i);
                }
                model.addRow(row);
                booksTable.setModel(model);
            }
            
            rs.close();
            stmt.close();
            conn.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Error" + e.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        authName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        genreCbox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        date_published = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        upBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.controlHighlight, 1, true));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Title:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Adding Book");

        bName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bName.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Author:");

        authName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authName.setForeground(new java.awt.Color(51, 51, 51));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Published Date:");

        genreCbox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genreCbox.setForeground(new java.awt.Color(51, 51, 51));
        genreCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreCboxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Genre:");

        date_published.setForeground(new java.awt.Color(51, 51, 51));
        date_published.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        date_published.setText("YYYY-MM-DD");
        date_published.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_publishedActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(0, 153, 255));
        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setBorder(null);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        delBtn.setBackground(new java.awt.Color(255, 51, 51));
        delBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delBtn.setForeground(new java.awt.Color(255, 255, 255));
        delBtn.setBorder(null);
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(0, 204, 204));
        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setBorder(null);
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        upBtn.setBackground(new java.awt.Color(51, 204, 0));
        upBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        upBtn.setForeground(new java.awt.Color(255, 255, 255));
        upBtn.setBorder(null);
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authName)
                            .addComponent(bName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(date_published)
                            .addComponent(genreCbox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(authName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genreCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(date_published, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.controlHighlight, 1, true));

        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        booksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                booksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(booksTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Books Inventory");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel6)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genreCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreCboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genreCboxActionPerformed
    
    private void resizeIcon(javax.swing.JButton button, String imagepath, int width, int height){
        ImageIcon originalIcon = new ImageIcon(getClass().getResource(imagepath));
        Image scaledImage = originalIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon =  new ImageIcon(scaledImage);
        button.setIcon(resizedIcon);
    }
    
    private boolean isValidDate(String dateStr){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        sdf.setLenient(false);
        try{
            sdf.parse(dateStr);
            return true;
        }catch(ParseException e){
            return false;
        }
    }
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String bname, author, genre, pub_date;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://Localhost:3306/books_db";
            String user = "root";
            String pass = "";
            
            Connection conn = DriverManager.getConnection(url, user, pass);
            Statement stmt = conn.createStatement();
            
            if(bName.getText().equals("")){
                JOptionPane.showMessageDialog(new JFrame(), "Book name is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else if(authName.getText().equals("")){
                JOptionPane.showMessageDialog(new JFrame(), "Author name is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else if(date_published.getText().equals("") || !isValidDate(date_published.getText().trim())){
                JOptionPane.showMessageDialog(new JFrame(), "Date publish is required and must be in YYYY-MM-DD format", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                bname = bName.getText().trim();
                author = authName.getText().trim();
                genre = (String) genreCbox.getSelectedItem();
                pub_date = date_published.getText().trim();
                
                String query = "INSERT INTO books_tbl(book_name, author, genre, pub_date)" + "VALUES ('" + bname + "','" + author +"','" + genre +"','" + pub_date +"')";
                stmt.executeUpdate(query);
                
                bName.setText("");
                authName.setText("");
                genreCbox.setSelectedIndex(0);
                date_published.setText("YYYY-MM-DD");
                
                JOptionPane.showMessageDialog(new JFrame(), "Adding Successfully", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                refreshTable();
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Error" + e.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void booksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = booksTable.getSelectedRow();
        
        if(selectedRow != -1){
            String id = booksTable.getValueAt(selectedRow, 0).toString();
            String book = booksTable.getValueAt(selectedRow, 1).toString();
            String author = booksTable.getValueAt(selectedRow, 2).toString();
            String genre = booksTable.getValueAt(selectedRow, 3).toString();
            String date = booksTable.getValueAt(selectedRow, 4).toString();
            
            bName.setText(book);
            authName.setText(author);
            date_published.setText(date);
            
            for(int i = 0; i < genreCbox.getItemCount(); i++){
                if(genreCbox.getItemAt(i).equals(genre)){
                    genreCbox.setSelectedIndex(i);
                    break;
                }
            }
        }
    }//GEN-LAST:event_booksTableMouseClicked

    private void date_publishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_publishedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_date_publishedActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed
        // TODO add your handling code here:
        String bname, author, genre, pub_date;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://Localhost:3306/books_db";
            String user = "root";
            String pass = "";
            
            Connection conn = DriverManager.getConnection(url, user, pass);
            Statement stmt = conn.createStatement();
            
            if(bName.getText().equals("")){
                JOptionPane.showMessageDialog(new JFrame(), "Book name is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else if(authName.getText().equals("")){
                JOptionPane.showMessageDialog(new JFrame(), "Author name is required", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else if(date_published.getText().equals("") || !isValidDate(date_published.getText().trim())){
                JOptionPane.showMessageDialog(new JFrame(), "Date publish is required and must be in YYYY-MM-DD format", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                bname = bName.getText().trim();
                author = authName.getText().trim();
                genre = (String) genreCbox.getSelectedItem();
                pub_date = date_published.getText().trim();
                
                int selectedRow = booksTable.getSelectedRow();
                String id = booksTable.getValueAt(selectedRow,0).toString();
                
                if(id.equals("")){
                    JOptionPane.showMessageDialog(new JFrame(), "Books ID is required to update the data", "Dialog", JOptionPane.ERROR_MESSAGE);
                }else{
                    String query = "UPDATE books_tbl SET book_name = '" + bname + "', author = '" + author + "', genre = '" + genre + "', pub_date = '" + pub_date + "' WHERE id = '" + id + "'";
                    stmt.executeUpdate(query);
                    
                    bName.setText("");
                    authName.setText("");
                    genreCbox.setSelectedIndex(0);
                    date_published.setText("YYYY-MM-DD");
                    
                    JOptionPane.showMessageDialog(new JFrame(), "Updating Successful", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                    refreshTable();
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Error" + e.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_upBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        bName.setText("");
        authName.setText("");
        genreCbox.setSelectedIndex(0);
        date_published.setText("YYYY-MM-DD");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            String url = "jdbc:MySQL://Localhost:3306/books_db";
            String user = "root";
            String pass = "";
            
            Connection conn = DriverManager.getConnection(url, user, pass);
            Statement stmt = conn.createStatement();
            
            int selectedRow = booksTable.getSelectedRow();
            String id = booksTable.getValueAt(selectedRow,0).toString();
                
            if(id.equals("")){
                JOptionPane.showMessageDialog(new JFrame(), "Books ID is required to update the data", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                String query = "SELECT * FROM books_tbl WHERE id = '"+ id + "'";
                ResultSet rs = stmt.executeQuery(query);
                
                if(rs.next()){
                    String delete = "DELETE FROM books_tbl WHERE id = '" + id + "'";
                    stmt.executeUpdate(delete);
                    
                    showMessageDialog(null, "Successfully Deleted");
                    refreshTable();
                    
                    bName.setText("");
                    authName.setText("");
                    genreCbox.setSelectedIndex(0);
                    date_published.setText("YYYY-MM-DD");
                }else{
                    JOptionPane.showMessageDialog(new JFrame(), "Book ID is required to delete the data", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Error" + e.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_delBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Books books = new Books();
                books.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField authName;
    private javax.swing.JTextField bName;
    private javax.swing.JTable booksTable;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField date_published;
    private javax.swing.JButton delBtn;
    private javax.swing.JComboBox<String> genreCbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton upBtn;
    // End of variables declaration//GEN-END:variables
}
